#version 450
#pragma shader_stage(compute)

layout (local_size_x_id = 0, local_size_y_id = 1) in;

layout (binding = 0) uniform sampler2D inputImage;
layout (binding = 1) uniform writeonly image2D outputImage;

void main() {
    vec2 coord = vec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y);
    vec4 pixel = texture(inputImage, coord);

    vec4 color = vec4(pixel.rgb, 0.0f);

    vec4 lumaVec = vec4(0.2627f, 0.6780f, 0.0593f, 0.0f);

    vec4 linearColor = min(2.3f * pow(color, vec4(2.8f)), color / 5.0f + 0.8f);

    float luma = dot(linearColor, lumaVec);

    float m1 = (2610.0 / 4096.0) / 4.0;
    float m2 = (2523.0 / 4096.0) * 128.0;
    float c1 = 3424.0 / 4096.0;
    float c2 = (2413.0 / 4096.0) * 32.0;
    float c3 = (2392.0 / 4096.0) * 32.0;
    vec4 p = pow(max(color, vec4(0.0)), vec4(1.0 / m2));
    vec4 denom = pow(max(p - c1, 0.0) / (c2 - c3 * p), vec4(1.0 / m1));
    color = vec4(vec3(denom * 10000.0 / 80), 1.0);
    color *= luma / dot(color, lumaVec);

    float betaRec2020 = 0.018053968510807f;
    float alphaRec2020 = 1.09929682680944f;

    pixel = vec4(pow(vec3(pixel.rgb), vec3(1/2.6f)), pixel.a);
    imageStore(outputImage, ivec2(gl_GlobalInvocationID.xy), pixel);
}
